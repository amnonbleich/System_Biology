install.packages("BoolNet")
install.packages("XML")
install.packages("BoolNet")
library(BoolNet)
setwd("~/System_Biology_Seminar/g-prot")
network <- loadNetwork("g-protein_model.boolnet")
time_series <- generateTimeSeries(network)
library(readr)
g_protein_symbols <- read_csv("~/System_Biology_Seminar/g-prot/g-protein_symbols.csv")
View(g_protein_symbols)
plotSequence(network)
library(readr)
g_protein_initial_vals <- read_csv("~/System_Biology_Seminar/g-prot/g-protein_initial_vals.csv")
View(g_protein_initial_vals)
g_protein_symbols <- read_csv("~/System_Biology_Seminar/g-prot/g-protein_symbols.csv", col_names = FALSE)
g_protein_initial_vals <- read_csv("~/System_Biology_Seminar/g-prot/g-protein_initial_vals.csv", col_names = FALSE)
g_protein_symbols[1,]
g_protein_symbols[1]
g_protein_initial_vals[1]
g_protein_initial_vals[12
]
g_protein_initial_vals[2]
plotSequence(network)
plotSequence(network, startState = g_protein_initial_vals[2])
View(g_protein_initial_vals)
View(g_protein_initial_vals)
g_protein_initial_vals[2]
c(g_protein_initial_vals[2])
plotSequence(network, startState = c(g_protein_initial_vals[2]))
plotSequence(network, startState = c(0,0,0,0,0,0,0,1,0,1,0,1,1,0,1,1,0,1)
time_series <- generateTimeSeries(network)
plotSequence(network, startState = c(0,0,0,0,0,0,0,1,0,1,0,1,1,0,1,1,0,1))
start_state = c(0,0,0,0,0,0,0,1,0,1,0,1,1,0,1,1,0,1)
plotSequence(network, startState = start_state )
time_series <- generateTimeSeries(network)
time_series <- generateTimeSeries(network, numSeries = 7)
time_series <- generateTimeSeries(network, numSeries = 1, numMeasurements = 18)
view(time_series)
View(time_series)
plotSequence(network, sequence = time_series)
plotSequence(sequence = time_series)
getPathToAttractor(network, startState = start_state )
getPathToAttractor(network, state = start_state )
attractors <- getAttractors(network, type="synchronous", startStates = start_state)
attractors <- getAttractors(network, type="synchronous", startState = start_state)
attractors <- getAttractors(network, type="synchronous",  startStates = start_state)
attractors <- getAttractors(network, type="synchronous",  startStates = "S0", "S2")
attractors <- getAttractors(network, type="synchronous",  startStates = c("S0", "S2")
getPathToAttractor(network, state = start_state )
plotSequence(sequence = time_series)
attractors <- getAttractors(network, type="synchronous",  startStates = c("S0", "S2"))
plotAttractors(attractors)
plotAttractors(attractors)
getPathToAttractor(network, state = start_state )
plotAttractors(attractors)
plotAttractors(attractors)
plotAttractors(attractors)
attractors <- getAttractors(network, type="synchronous",  startStates = 5)
plotAttractors(attractors)
getPathToAttractor(network, state = start_state )
path_attractor <- getPathToAttractor(network, state = start_state )
plotSequence(sequence = time_series)
plotAttractors(path_attractor)
plotAttractors(path_attractor)
path_attractor <- getPathToAttractor(network, state = start_state )
path_attractor <- getPathToAttractor(network, state = start_state )
path_attractor
getPathToAttractor(network, state = start_state )
plotAttractors(attractors)
getPathToAttractor(network, state = start_state )
path_attractor <- getPathToAttractor(network, state = start_state )
print(path_attractor)
plotAttractors(attractors)
plotAttractors(attractors, mode="graph")
attractors <- getAttractors(network, type="synchronous",  startStates = 5)
plotAttractors(attractors, mode="graph")
attractors <- getAttractors(network, type="synchronous",  startStates = 5)
plotAttractors(attractors, mode="graph")
attractors <- getAttractors(network, type="synchronous", method = "chosen", startStates = start_state)
start_state = c(0,0,0,0,0,0,0,1,0,1,0,1,1,0,1,1,0,1)
attractors <- getAttractors(network, type="synchronous", method = "chosen", startStates = start_state)
attractors <- getAttractors(network, type="synchronous", method = "chosen", startStates = c(start_state)
plotAttractors(attractors, mode="graph")
path_attractor <- getPathToAttractor(network, state = start_state )
print(path_attractor)
plotAttractors(attractors, mode="graph")
attractors <- getAttractors(network, type="synchronous", method = "chosen", startStates = c(start_state)
plotAttractors(attractors, mode="graph")
path_attractor <- getPathToAttractor(network, state = start_state )
print(path_attractor)
plotAttractors(attractors)
attractors <- getAttractors(network, type="synchronous", method = "chosen", startStates = c(start_state)
plotAttractors(attractors)
path_attractor <- getPathToAttractor(network, state = start_state )
print(path_attractor)
attractors <- getAttractors(network, type="synchronous", method = "chosen", startStates = c(start_state)
plotAttractors(attractors)
path_attractor <- getPathToAttractor(network, state = start_state )
print(path_attractor)
attractors <- getAttractors(network, type="synchronous", method = "chosen", startStates = c(start_state)
plotAttractors(attractors)
path_attractor <- getPathToAttractor(network, state = start_state )
print(path_attractor)
attractors <- getAttractors(network, type="synchronous", method = "chosen", startStates = c(start_state)
plotAttractors(attractors)
path_attractor <- getPathToAttractor(network, state = start_state )
print(path_attractor)
attractors <- getAttractors(network, type="synchronous", method = "chosen", startStates = c(start_state)
attractors <- getAttractors(network, type="synchronous", method = "chosen", startStates = c(start_state))
attractors <- getAttractors(network, type="synchronous", method = "chosen", startStates = c(start_state))
attractors <- getAttractors(network, type="synchronous", method = "chosen", startStates = list(start_state))
plotAttractors(attractors)
table <- getTransitionTable(attractors)
table
attractors <- getAttractors(network, type="synchronous", method = "chosen", startStates = list(start_state))
plotAttractors(attractors)
plotAttractors(attractors)
table <- getTransitionTable(attractors)
table
attractors <- getAttractors(network, type="asynchronous", method = "chosen", startStates = list(start_state))
plotAttractors(attractors)
table <- getTransitionTable(attractors)
attractors <- getAttractors(network, type="asynchronous", method = "chosen", startStates = list(start_state))
plotAttractors(attractors)
plotAttractors(attractors)
attractors <- getAttractors(network, type="synchronous", method = "chosen", startStates = list(start_state))
plotAttractors(attractors)
table <- getTransitionTable(attractors)
table
perturbNetwork(network)
plotSequence(network, startState = start_state )
plotSequence(network, startState = start_state )
start_state = c(0,0,0,0,0,0,0,1,0,1,0,1,1,0,1,1,0,1)
plotSequence(network, startState = start_state )
attractors <- getAttractors(network, type="synchronous", method = "chosen", startStates = list(start_state))
plotAttractors(attractors)
table <- getTransitionTable(attractors)
c(g_protein_initial_vals[2])
list(g_protein_initial_vals[2])
list(g_protein_initial_vals[2])
start_state = list(g_protein_initial_vals[2])
plotSequence(network, startState = start_state )
start_state = vectorize(g_protein_initial_vals[2])
start_state = vectorize(g_protein_initial_vals[2])
start_state = Vectorize(g_protein_initial_vals[2])
plotSequence(network, startState = start_state )
start_state = Vectorize(c(g_protein_initial_vals[2]))
plotSequence(network, startState = start_state )
c(g_protein_initial_vals[2])
pertubed_network1 <- perturbNetwork(network, perturb = "transitions", method="shuffle")
pertubed_network1 <- perturbNetwork(network, perturb = "transitions", method="bitflip")
plotSequence(pertubed_network1)
pertubed_network1 <- perturbNetwork(network, perturb = "transitions", method="bitflip", numStates = 2)
pertubed_network1 <- perturbNetwork(network, perturb = "transitions", method="bitflip", numStates = 2)
plotSequence(network, startState = start_state )
pertubed_network1 <- perturbNetwork(network, perturb = "transitions", method="bitflip", numStates = 2)
start_state = c(0,0,0,0,0,0,0,1,0,1,0,1,1,0,1,1,0,1)
plotSequence(network, startState = start_state )
plotSequence(network, startState = start_state )
pertubed_network1 <- perturbNetwork(network, perturb = "transitions", method="bitflip", numStates = 2)
plotSequence(pertubed_network1)
plotSequence(pertubed_network1, startState = start_state)
plotSequence(network, startState = start_state )
plotSequence(pertubed_network1, startState = start_state)
plotSequence(network, startState = start_state )
plotSequence(pertubed_network1, startState = start_state)
plotSequence(pertubed_network1, startState = start_state)
network1 <- loadNetwork("g-protein_model_simplified.boolnet")
g_protein_symbols1 <- read_csv("~/System_Biology_Seminar/g-prot/g-protein_symbols_simplified.csv", col_names = FALSE)
g_protein_initial_vals1 <- read_csv("~/System_Biology_Seminar/g-prot/g-protein_initial_vals_simplified.csv", col_names = FALSE)
start_state1 = c(0,0,0,0,0,0,0,1,0,1,0,1,1,0,1,1,0,1)
plotSequence(network1, startState = start_state1 )
pertubed_network1 <- perturbNetwork(network1, perturb = "transitions", method="bitflip", numStates = 2)
network1 <- loadNetwork("g-protein_model_simplified.boolnet")
network1 <- loadNetwork("g-protein_simplified_model.boolnet")
g_protein_symbols1 <- read_csv("~/System_Biology_Seminar/g-prot/g-protein_symbols_simplified.csv", col_names = FALSE)
g_protein_symbols1 <- read_csv("~/System_Biology_Seminar/g-prot/g-protein_simplified_symbols.csv", col_names = FALSE)
g_protein_initial_vals1 <- read_csv("~/System_Biology_Seminar/g-prot/g-protein_simplified_initial_vals.csv", col_names = FALSE)
start_state1 = c(0,0,0,0,0,0,0,1,0,1,0,1,1,0,1,1,0,1)
plotSequence(network1, startState = start_state1 )
c(g_protein_initial_vals[2])
start_state1 = c(0,0,0,0,0,0,0,1,0,1,0,1,1,0,1,1,0,1)
plotSequence(network1, startState = start_state1 )
c(g_protein_initial_vals1[2])
start_state1 = c(0,0,0,0,0,1,0,1,0,1,1,0,1)
plotSequence(network1, startState = start_state1 )
pertubed_network1 <- perturbNetwork(network1, perturb = "transitions", method="bitflip", numStates = 2)
plotSequence(pertubed_network1, startState = start_state)
plotSequence(pertubed_network1, startState = start_state1)
plotSequence(network1, startState = start_state1 )
plotSequence(pertubed_network1, startState = start_state1)
pertubed_network1 <- perturbNetwork(network1, perturb = "functions", method="bitflip")
plotSequence(pertubed_network1, startState = start_state1)
pertubed_network1 <- perturbNetwork(network1, perturb = "functions", method="bitflip", maxNumBits = 5)
plotSequence(pertubed_network1, startState = start_state1)
pertubed_network1 <- perturbNetwork(network1, perturb = "functions", method="bitflip", maxNumBits = 5)
plotSequence(pertubed_network1, startState = start_state1)
pertubed_network1 <- perturbNetwork(network1, perturb = "functions", method="bitflip", maxNumBits = 5)
plotSequence(pertubed_network1, startState = start_state1)
pertubed_network1 <- perturbNetwork(network1, perturb = "functions", method="bitflip", maxNumBits = 5)
pertubed_network2 <- perturbNetwork(network2, perturb = "functions", method="bitflip", maxNumBits = 5)
plotSequence(pertubed_network2, startState = start_state2)
plotSequence(pertubed_network1, startState = start_state1)
plotSequence(pertubed_network2, startState = start_state2)
plotSequence(pertubed_network1, startState = start_state1)
plotSequence(pertubed_network2, startState = start_state2)
pertubed_network1 <- perturbNetwork(network1, perturb = "functions", method="bitflip", maxNumBits = 5)
pertubed_network2 <- perturbNetwork(network2, perturb = "functions", method="bitflip", maxNumBits = 5)
plotSequence(network2, startState = start_state2 )
network2 <- loadNetwork("g-protein_model.boolnet")
g_protein_symbols2 <- read_csv("~/System_Biology_Seminar/g-prot/g-protein_symbols.csv", col_names = FALSE)
g_protein_initial_vals2 <- read_csv("~/System_Biology_Seminar/g-prot/g-protein_initial_vals.csv", col_names = FALSE)
c(g_protein_initial_vals2[2])
start_state2 = c(0,0,0,0,0,0,0,1,0,1,0,1,1,0,1,1,0,1)
plotSequence(network2, startState = start_state2 )
pertubed_network1 <- perturbNetwork(network1, perturb = "functions", method="bitflip", maxNumBits = 5)
pertubed_network2 <- perturbNetwork(network2, perturb = "functions", method="bitflip", maxNumBits = 5)
plotSequence(pertubed_network1, startState = start_state1)
plotSequence(pertubed_network2, startState = start_state2)
pertubed_network1 <- perturbNetwork(network1, perturb = "functions", method="bitflip", maxNumBits = 6)
pertubed_network1 <- perturbNetwork(network1, perturb = "functions", method="bitflip", maxNumBits = 6)
pertubed_network2 <- perturbNetwork(network2, perturb = "functions", method="bitflip", maxNumBits = 6)
plotSequence(pertubed_network1, startState = start_state1)
plotSequence(pertubed_network2, startState = start_state2)
pertubed_network1 <- perturbNetwork(network1, perturb = "functions", method="bitflip", maxNumBits = 3)
pertubed_network2 <- perturbNetwork(network2, perturb = "functions", method="bitflip", maxNumBits = 3)
plotSequence(pertubed_network1, startState = start_state1)
plotSequence(pertubed_network2, startState = start_state2)
pertubed_network1 <- perturbNetwork(network1, perturb = "functions", method="bitflip", maxNumBits = 3)
pertubed_network2 <- perturbNetwork(network2, perturb = "functions", method="bitflip", maxNumBits = 3)
plotSequence(pertubed_network1, startState = start_state1)
plotSequence(pertubed_network2, startState = start_state2)
plotSequence(pertubed_network1, startState = start_state1)
plotSequence(pertubed_network2, startState = start_state2)
pertubed_network1 <- perturbNetwork(network1, perturb = "functions", method="bitflip", maxNumBits = 10)
pertubed_network2 <- perturbNetwork(network2, perturb = "functions", method="bitflip", maxNumBits = 10)
plotSequence(pertubed_network1, startState = start_state1)
plotSequence(pertubed_network2, startState = start_state2)
pertubed_network1 <- perturbNetwork(network1, perturb = "functions", method="bitflip", maxNumBits = 10)
pertubed_network2 <- perturbNetwork(network2, perturb = "functions", method="bitflip", maxNumBits = 10)
plotSequence(pertubed_network1, startState = start_state1)
plotSequence(pertubed_network2, startState = start_state2)
pertubed_network1 <- perturbNetwork(network1, perturb = "functions", method="bitflip", maxNumBits = 10)
pertubed_network2 <- perturbNetwork(network2, perturb = "functions", method="bitflip", maxNumBits = 10)
plotSequence(pertubed_network1, startState = start_state1)
plotSequence(pertubed_network2, startState = start_state2)
plotSequence(pertubed_network1, startState = start_state1)
plotSequence(pertubed_network2, startState = start_state2)
plotSequence(pertubed_network2, startState = start_state2)
pertubed_network1 <- perturbNetwork(network1, perturb = "functions", method="bitflip", maxNumBits = 10)
pertubed_network2 <- perturbNetwork(network2, perturb = "functions", method="bitflip", maxNumBits = 10)
plotSequence(pertubed_network1, startState = start_state1)
plotSequence(pertubed_network2, startState = start_state2)
pertubed_network1 <- perturbNetwork(network1, perturb = "functions", method="bitflip", maxNumBits = 10)
pertubed_network2 <- perturbNetwork(network2, perturb = "functions", method="bitflip", maxNumBits = 10)
plotSequence(pertubed_network1, startState = start_state1)
plotSequence(pertubed_network2, startState = start_state2)
pertubed_network1 <- perturbNetwork(network1, perturb = "functions", method="bitflip", maxNumBits = 10)
pertubed_network2 <- perturbNetwork(network2, perturb = "functions", method="bitflip", maxNumBits = 10)
plotSequence(pertubed_network1, startState = start_state1)
plotSequence(pertubed_network2, startState = start_state2)
pertubed_network1 <- perturbNetwork(network1, perturb = "functions", method="bitflip", maxNumBits = 10)
pertubed_network2 <- perturbNetwork(network2, perturb = "functions", method="bitflip", maxNumBits = 10)
plotSequence(pertubed_network1, startState = start_state1)
plotSequence(pertubed_network2, startState = start_state2)
network1 <- loadNetwork("g-protein_simplified_model.boolnet")
g_protein_symbols1 <- read_csv("~/System_Biology_Seminar/g-prot/g-protein_simplified_symbols.csv", col_names = FALSE)
g_protein_initial_vals1 <- read_csv("~/System_Biology_Seminar/g-prot/g-protein_simplified_initial_vals.csv", col_names = FALSE)
library(BoolNet)
library(readr)
setwd("~/System_Biology_Seminar/simple")
network1 <- loadNetwork("simple_system_model_remodelled.boolnet")
network1 <- loadNetwork("simple_system_model_remodelled.boolnet")
network1 <- loadNetwork("simple_system_model_remodelled.boolnet")
library(BoolNet)
library(readr)
setwd("~/System_Biology_Seminar/simple")
network1 <- loadNetwork("simple_system_model_remodelled.boolnet")
start_state1 = c(0,0,0,0,1,0,1,0,1,1,1)
plotSequence(network1, startState = start_state1 )
pertubed_network1 <- perturbNetwork(network1, perturb = "transitions", method="bitflip", numStates = 2)
plotSequence(pertubed_network1, startState = start_state1 )
plotSequence(network1, startState = start_state1 )
pertubed_network1 <- perturbNetwork(network1, perturb = "transitions", method="bitflip", numStates = 2)
plotSequence(pertubed_network1, startState = start_state1 )
pertubed_network1 <- perturbNetwork(network1, perturb = "transitions", method="bitflip", numStates = 3)
pertubed_network1 <- perturbNetwork(network1, perturb = "transitions", method="bitflip", numStates = 3)
plotSequence(pertubed_network1, startState = start_state1 )
pertubed_network1 <- perturbNetwork(network1, perturb = "functions", method="bitflip", maxNumBits = 10)
plotSequence(pertubed_network1, startState = start_state1 )
plotSequence(network1, startState = start_state1 )
plotSequence(pertubed_network1, startState = start_state1 )
setwd("~/System_Biology_Seminar/dragonball")
network1 <- loadNetwork("dragon-ball-simplified_model.boolnet")
start_state1 = c(0,0,0,0,0,0,0,1,0,1,0,1,0,1,1,0,1,1)
plotSequence(network1, startState = start_state1 )
pertubed_network1 <- perturbNetwork(network1, perturb = "functions", method="bitflip", maxNumBits = 10)
plotSequence(pertubed_network1, startState = start_state1 )
plotSequence(network1, startState = start_state1 )
